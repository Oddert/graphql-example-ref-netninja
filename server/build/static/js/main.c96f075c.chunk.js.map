{"version":3,"sources":["queries/index.js","components/BookDetails.js","components/BookList.js","components/AddBook.js","App.js","index.js"],"names":["getBooksQuery","gql","_templateObject","getAuthorsQuery","_templateObject2","addBookMutation","_templateObject3","getBookQuery","_templateObject4","BookDetails","book","this","props","data","react_default","a","createElement","name","genre","author","className","books","map","each","key","id","console","log","displayBookDetails","React","Component","graphql","options","variables","bookId","BookList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","selected","_this2","loading","onClick","e","setState","displayBooks","components_BookDetails","AddBook","authorId","submitForm","bind","assertThisInitialized","disabled","authors","value","preventDefault","refetchQueries","query","onSubmit","type","onChange","target","displayAuthors","compose","client","ApolloClient","uri","App","react_apollo_esm","components_BookList","components_AddBook","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c96f075c.chunk.js","sourcesContent":["import { gql } from 'apollo-boost'\r\n\r\nexport const getBooksQuery = gql`\r\n  {\r\n    books {\r\n      name\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const getAuthorsQuery = gql`\r\n  {\r\n    authors {\r\n      name\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nexport const addBookMutation = gql`\r\n  mutation ($name: String!, $genre: String!, $authorId: ID!) {\r\n    addBook (name: $name, genre: $genre, authorId: $authorId) {\r\n      name\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nexport const getBookQuery = gql`\r\n  query ($id: ID) {\r\n    book (id: $id) {\r\n      id\r\n      name\r\n      genre\r\n      author {\r\n        id\r\n        name\r\n        age\r\n        books {\r\n          name\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { graphql } from 'react-apollo'\r\nimport { getBookQuery } from '../queries'\r\n\r\n\r\nclass BookDetails extends React.Component {\r\n  displayBookDetails () {\r\n    const { book } = this.props.data\r\n    if (book) return (\r\n      <div>\r\n        <h2>{book.name}</h2>\r\n        <p>{book.genre}</p>\r\n        <em>{book.author.name}</em>\r\n        <p>All books by this author</p>\r\n        <ul className='other-books'>\r\n          {book.author.books.map(each =>\r\n            <li key={each.id}>{each.name}</li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    )\r\n    else return (\r\n      <div>No book selected.</div>\r\n    )\r\n  }\r\n\r\n  render () {\r\n    console.log(this.props)\r\n    return (\r\n      <div id='book-details'>\r\n        {this.displayBookDetails()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default graphql(getBookQuery, {\r\n  options: props => ({\r\n    variables: {\r\n      id: props.bookId\r\n    }\r\n  })\r\n})(BookDetails)\r\n","import React from 'react'\r\nimport { graphql } from 'react-apollo'\r\n\r\nimport BookDetails from './BookDetails'\r\nimport { getBooksQuery } from '../queries'\r\n\r\nclass BookList extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      selected: null\r\n    }\r\n  }\r\n\r\n  displayBooks () {\r\n    let data = this.props.data\r\n    if (data.loading) return (<div>Loading Books...</div>)\r\n    else return data.books.map(\r\n      each => (\r\n        <li key={each.id} onClick={e => this.setState({ selected: each.id })}>\r\n          {each.name}\r\n        </li>\r\n      )\r\n    )\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <ul id='book-list'>\r\n          {this.displayBooks()}\r\n        </ul>\r\n        <BookDetails bookId={this.state.selected} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default graphql(getBooksQuery)(BookList)\r\n","import React from 'react'\r\nimport { graphql, compose } from 'react-apollo'\r\n\r\nimport { getAuthorsQuery, addBookMutation, getBooksQuery } from '../queries'\r\n\r\nclass AddBook extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      name: '',\r\n      genre: '',\r\n      authorId: ''\r\n    }\r\n    this.submitForm = this.submitForm.bind(this)\r\n  }\r\n\r\n  displayAuthors () {\r\n    let data = this.props.getAuthorsQuery\r\n    if (data.loading) return (<option disabled>Loading Authors...</option>)\r\n    else return data.authors.map(\r\n      each => <option key={each.id} value={each.id}>{each.name}</option>\r\n    )\r\n  }\r\n\r\n  submitForm (e) {\r\n    e.preventDefault()\r\n    this.props.addBookMutation({\r\n      variables: {\r\n        name: this.state.name,\r\n        genre: this.state.genre,\r\n        authorId: this.state.authorId\r\n      },\r\n      refetchQueries: [{ query: getBooksQuery }]\r\n    })\r\n    this.setState({\r\n      name: '',\r\n      genre: '',\r\n      authorId: ''\r\n    })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <form className='add-book' onSubmit={this.submitForm}>\r\n        <div className='field'>\r\n          <label>Book Name:</label>\r\n          <input type='text' onChange={e => this.setState({ name: e.target.value })} value={this.state.name} />\r\n        </div>\r\n        <div className='field'>\r\n          <label>Genre:</label>\r\n          <input type='text' onChange={e => this.setState({ genre: e.target.value })} value={this.state.genre} />\r\n        </div>\r\n        <div className='field'>\r\n          <label>Author:</label>\r\n          <select onChange={e => this.setState({ authorId: e.target.value })}  value={this.state.authorId}>\r\n            <option>-Select Author-</option>\r\n            {this.displayAuthors()}\r\n          </select>\r\n        </div>\r\n        <button>+</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default compose (\r\n  graphql (getAuthorsQuery, { name: \"getAuthorsQuery\" })\r\n  , graphql (addBookMutation, { name: \"addBookMutation\" })\r\n)(AddBook)\r\n","import React from 'react';\nimport ApolloClient from 'apollo-boost'\nimport { ApolloProvider } from 'react-apollo'\n\nimport BookList from './components/BookList'\nimport AddBook from './components/AddBook'\n\nconst client = new ApolloClient ({\n  uri: 'http://localhost:4000/graphql'\n})\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <div id='main'>\n          <h1>books i'nit</h1>\n          <BookList />\n          <AddBook />\n        </div>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}